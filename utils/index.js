import { links } from "../mocks/links.js";
import axios from "axios";
import { bot } from "../src/app.js";

const CUTTLY_API_KEY = process.env.CUTTLY_API_KEY;
const BITLY_API_KEY = process.env.BITLY_API_KEY;

export const generateCuttlyApiLink = (finalLink) => {
    return `http://cutt.ly/api/api.php?key=${CUTTLY_API_KEY}&short=${encodeURIComponent(finalLink)}`;
};

export const generateFinalLink = ({ telegramIdQuery, playerNameQuery, data }) => {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—É—é —Å—Å—ã–ª–∫—É, –¥–æ–±–∞–≤–ª—è—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    return `${links.find((item) => item.title === data).link}${telegramIdQuery}${playerNameQuery}`;
};

export const fetchLinksData = async ({ finalLink, chatID }) => {
    const cuttlyLink = generateCuttlyApiLink(finalLink);
    try {
        // 1. –ó–∞–ø—Ä–æ—Å –∫ Cuttly
        console.log(`–ó–∞–ø—Ä–æ—Å –∫ Cuttly: ${cuttlyLink}`);
        const {
            data: {
                url: { shortLink: cuttlyShortLink },
            },
        } = await axios.get(cuttlyLink);

        console.log(`–ö–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞ Cuttly: ${cuttlyShortLink}`);

        // 2. –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∞ MentorHans
        const mentorHansLink = `https://mentorhans.ru?url=${encodeURIComponent(cuttlyShortLink)}`;
        console.log(`–°—Å—ã–ª–∫–∞ MentorHans: ${mentorHansLink}`);

        // 3. –ó–∞–ø—Ä–æ—Å –∫ Bitly –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ MentorHans
        const {
            data: { link: bitlyShortLink },
        } = await axios.post(
            'https://api-ssl.bitly.com/v4/shorten',
            { long_url: mentorHansLink },
            {
                headers: {
                    Authorization: `Bearer ${BITLY_API_KEY}`,
                },
            }
        );

        console.log(`–ö–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞ Bitly: ${bitlyShortLink}`);

        // 4. –ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const message = `
<b>–ì–æ—Ç–æ–≤–æ! üéâ</b>\n
–ò—Å—Ö–æ–¥–Ω–∞—è —Å—Å—ã–ª–∫–∞: <a href="${finalLink}">${finalLink}</a>\n
–ö–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞ Cuttly: <a href="${cuttlyShortLink}">${cuttlyShortLink}</a>\n
–°—Å—ã–ª–∫–∞ MentorHans: <a href="${mentorHansLink}">${mentorHansLink}</a>\n
–ö–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞ Bitly: <a href="${bitlyShortLink}">${bitlyShortLink}</a>
`;

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        await bot.sendMessage(chatID, message, { parse_mode: 'HTML' });

        return {
            cuttlyShortLink,
            mentorHansLink,
            bitlyShortLink,
            finalLink,
        };
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', e);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        await bot.sendMessage(chatID, '‚ö†Ô∏è –û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', { parse_mode: 'HTML' });

        return {
            cuttlyShortLink: '',
            mentorHansLink: '',
            bitlyShortLink: '',
            finalLink: '',
        };
    }
};